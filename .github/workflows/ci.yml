name: CI OnlyWave

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: onlywave_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/onlywave_test
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NODE_ENV: test

    steps:
    - name: Checkout o código
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Instalar dependências
      run: npm ci

    - name: Gerar Prisma Client
      run: npx prisma generate

    - name: Rodar Migrations
      run: npx prisma migrate deploy

    - name: Rodar Linter
      run: npm run lint

    - name: Rodar Testes Unitários
      run: npm run test

    - name: Rodar Testes de Integração
      run: npm run test:int

    - name: Rodar Build
      run: npm run build

    - name: Upload Cobertura para Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true 